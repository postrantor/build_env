# for current env_path
ENV_DIR=${QUAD_WORKDIR}/.env/

# choose shell version to source differene scripts
if [ -n "$BASH_VERSION" ]; then
  source /opt/ros/${ROS_DISTRO}/setup.bash
  source ${QUAD_WORKDIR}/install/setup.bash
elif [ -n "$ZSH_VERSION" ]; then
  source /opt/ros/${ROS_DISTRO}/setup.zsh
  source ${QUAD_WORKDIR}/install/setup.zsh
fi

# source rmw version
export RMW_IMPLEMENTATION=rmw_cyclonedds_cpp
# export CYCLONEDDS_URI=""

# enable gazebo env
architecture=$(uname -m)
if [[ "$architecture" == "x86_64" ]]; then
  source /usr/share/gazebo/setup.sh
  export GAZEBO_PLUGIN_PATH=$GAZEBO_PLUGIN_PATH:/opt/ros/${ROS_DISTRO}/lib
  #export GZ_VERSION=fortress
elif [[ "$architecture" == "aarch64" ]]; then
  echo "Current machine is ARM architecture"
else
  echo "Unknown CPU Architecture: $architecture"
fi

## colcon
# add colcon related command
export _colcon_cd_root=${QUAD_WORKDIR} # for `colcon_cd`
source ${ENV_DIR}/colcon_cd.sh
source ${ENV_DIR}/colcon-argcomplete.bash

# set colcon build args
export COLCON_DEFAULTS_FILE=${QUAD_WORKDIR}/.config/build-args.yaml # for `colcon build`
export COLCON_HOME=${QUAD_WORKDIR}/.config/                         # for colcon.meta

# add vcs tool
source ${ENV_DIR}/vcs.bash
export QUAD_REPO=${QUAD_WORKDIR}/.config/quadruped.repos

# add format tool
source ${ENV_DIR}/format-code.bash

# add manage-project function
source ${ENV_DIR}/manage-project.bash

# add manage-ide function
source ${ENV_DIR}/manage-ide.bash
